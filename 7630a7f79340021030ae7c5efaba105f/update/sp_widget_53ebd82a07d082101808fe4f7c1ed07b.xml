<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function (spUtil, spModal) {
	/* widget controller */
	var c = this;
	c.data.viewRequests = false;

	// delete object property if exists
	function deleteProp(obj, key) {
		if (obj.hasOwnProperty(key)) {
			delete obj[key];
		}
		return obj;
	}

	// Reset data properties
	function resetData() {
		deleteProp("action");
		deleteProp("info");
		deleteProp("rejectReason");
	}

	c.getData = function () {
		c.data.uid = c.data.usersReq.uID;
		c.data.action = "getData";
		c.server.update().then(resetData).catch(handleError);
	};

	function handleUpdateResponse(res) {
		resetData();
		c.server.refresh();
	}

	function handleError(error) {
		// Handle or log the error as needed
		console.error('An error occurred:', error);
		resetData();
	}

	c.approveRequest = function (record) {
		if(c.data.roles.length){
			spUtil.addErrorMessage("Please select the input for the role.");
		}else{
			var warn = '<i class="fa fa-warning" aria-hidden="true"></i>';
			spModal.confirm("Are you sure to <b>approve</b> this request?").then(function (confirmed) {
				spUtil.addTrivialMessage("Approving the request...");
				record.roles = c.data.roles.value;
				if(c.data.licenses.length > 0)
					record.licenses = c.data.licenses.value;
				else
					record.licenses = {};
				c.data.info = record;
				c.data.action = 'approve';
				c.server.update().then(handleUpdateResponse).catch(handleError);
			});

		}
	};

	c.rejectRequest = function (record) {
		spModal.open({
			title: 'Reason for rejecting',
			message: 'Please <b>provide the comments</b> for rejecting the request.',
			buttons: [
				{ label: '✘ ${Cancel}', cancel: true },
				{ label: '✔ ${Reject}', primary: true }
			],
			input: true,
			size: 'md'
		}).then(function (reason) {
			c.data.rejectReason = reason;
			c.data.info = record;
			c.data.action = 'reject';
			c.server.update().then(handleUpdateResponse).catch(handleError)
		}, function () { }).catch(handleError);
	};

};
]]></client_script>
        <controller_as>c</controller_as>
        <css>.container{
  margin: 0 auto;
  padding: 0;
}

#leftList {
  transition: all 0.5s ease;
  margin: 0 auto;
  padding: 0 10px;
}

.table{

  width: 100%;
}
.table td,
.table th {
  text-align: center;
  vertical-align: middle;
}

.btn {
  background: transparent;
  border-radius: 0px;
  vertical-align: middle;
}

.btn-approve {
  border: 1px solid green;
}

.btn-approve:hover {
  color: white;
  background: green;
}

.btn-reject {
  border: 1px solid red;
  min-height: 100%;
}

.btn-reject:hover {
  color: white;
  background: red;
}

.no-request {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 300px;
  text-align: center;
  color: black;
  text-transform: uppercase;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description>Shows the requests list and allow admin to either approve or reject a request</description>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>aam_admin_widget-approve_or_reject</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Admin - Approve or Reject</name>
        <option_schema/>
        <public>false</public>
        <roles>x_1131046_aa_man_0.admin</roles>
        <script><![CDATA[(function () {
	/* populate the 'data' object */
	var cls = new CommonClass();
	data.requests = cls.getAllPendingReq();
	data.rolesTable = cls.rolesTableName;
	data.licensesTable = cls.licensesTableName;

	if (input) {
		var record = input.info;

		// APPROVE action
		if (input.action === "approve") {
			try {
				var output = cls.approveOrRejectUser("approve", record);
				if (output.isCreated)
					gs.addInfoMessage("User has been created");
				else
					gs.addErrorMessage('Error while creating user.\n<b>Reason:</b> ' + output.msg);
			} catch (e) {
				gs.error('Error approving request:', e);
				gs.addErrorMessage('An error occurred while approving the request.');
			}
		}

		// REJECT action
		if (input.action === 'reject') {
			try {
				record.rejectReason = input.rejectReason;
				// Script Includes function
				cls.approveOrRejectUser("reject", record);
				gs.addInfoMessage("User has been rejected");
			} catch (e) {
				gs.error('Error rejecting request:', e);
				gs.addErrorMessage('An error occurred while rejecting the request.');
			}
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-02-14 11:16:41</sys_created_on>
        <sys_id>53ebd82a07d082101808fe4f7c1ed07b</sys_id>
        <sys_mod_count>502</sys_mod_count>
        <sys_name>Admin - Approve or Reject</sys_name>
        <sys_package display_value="AA Management" source="x_1131046_aa_man_0">7630a7f79340021030ae7c5efaba105f</sys_package>
        <sys_policy/>
        <sys_scope display_value="AA Management">7630a7f79340021030ae7c5efaba105f</sys_scope>
        <sys_update_name>sp_widget_53ebd82a07d082101808fe4f7c1ed07b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-02-20 06:28:56</sys_updated_on>
        <template><![CDATA[<div class="container">
    <div ng-if="data.requests.length > 0" class="table-responsive-sm" id="leftList">
        <h2 class="text-center">Requests Details:-</h2><br>
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Username *</th>
                    <th scope="col">Name *</th>
                    <th scope="col">Environment *</th>
                    <th scope="col">Requested On</th>
                    <th scope="col">Role *</th>
                    <th scope="col">License</th>
                  <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="info in data.requests">
                    <th scope="row">{{info.no}}</th>
                    <td>{{info.username}}</td>
                    <td>{{info.name}}</td>
                    <td>{{info.environment}}</td>
                    <td>{{info.requestedOn}}</td>
                    <td><sn-record-picker id="txt_roles" table="data.rolesTable" field="data.roles" display-field="'name'"
                        value-field="'sys_id'" search-fields="'name'" page-size="50" multiple="true"></sn-record-picker></td>
                    <td><sn-record-picker id="txt_license" table="data.licensesTable" field="data.licenses"
                        display-field="'detail'" value-field="'sys_id'" search-fields="'name'" page-size="50"
                        multiple="true"></sn-record-picker></td>
                    <td>
                     <button class="btn btn-approve" ng-click="c.approveRequest(info)">Approve</button>
                    <button class="btn btn-reject" ng-click="c.rejectRequest(info)">Reject</button>
                    </td>
                </tr>
            </tbody>
        </table>

<div ng-if="data.requests.length <= 0" class="col-sm-12 no-request">
    <h2>No Request Found.</h2>
</div>

</div>]]></template>
    </sp_widget>
</record_update>
