<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="DELETE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1131046_aa_man_0.APCommonMethods</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>APCommonMethods</name>
        <script><![CDATA[var APCommonFunctions = Class.create();
APCommonFunctions.prototype = {
    initialize: function() {
        this.defaultPass = "abc@123123";
        this.log = "SI | APCommonFunctions | ";
    },
    type: 'APCommonFunctions',
    adminGroupID: '0730ebf79340021030ae7c5efaba1068',
    IST: 19800000,
    //event1: 'x_snc_accessprov_0.send_mail_to_user',
    //event2: 'x_snc_accessprov_0.inform_admin',
    ApiMethods: new AA_API_Methods(this.defaultPass),
    CmnMethods: new CommonMethods(),
    groupMemberGR: new GlideRecord('sys_user_grmember'),
    userRequestsGR: new GlideRecord('x_1131046_aa_man_0_user_requests'),
    usersGR: new GlideRecord('x_1131046_aa_man_0_users'),
    addEvent: function(event, rec, p1, p2) {
        gs.info(this.log + " addEvent >> " + event);
        gs.eventQueue(name = event, record = rec, parm1 = p1, parm2 = p2);
    },
    getAllPendingReq: function() {
        var logName = this.log + "getAllPendingReq >> ";
        if (!this.isAdmin()) {
            gs.error(logName + " Unknown Access found");
            // Add Mail Notification when someone other than admin tried to access it.
            return;
        } else {
            gs.info(logName + "getting all the pending requests.");
            var reqData = [];
            var i = 0;
            var gd = new GlideDate();
            let table = this.userRequestsGR;
            table.addQuery('status', 'pending');
            table.orderByDesc('sys_created_on');
            table.query();
            while (table.next()) {
                let gdt = new GlideDateTime(table.sys_created_on.toString());
                gdt.add(this.IST);
                gd.setValue(gdt.getValue());
                reqData.push({
                    no: ++i,
                    recordSysID: table.getUniqueValue(),
                    name: table.getValue('first_name').toString(),
                    mailID: table.getValue('email_id').toString(),
                    username: table.getValue('username').toString(),
                    environment: table.getDisplayValue('environment').toString(),
                    requestedOn: gd.getByFormat("dd-MMM-yyyy hh:mm a"),
                });
            }
            return reqData;
        }
    },
    isAdmin: function() {
        return gs.getUser().isMemberOf(this.adminGroupID);
    },
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-02-06 14:17:35</sys_created_on>
        <sys_id>00c9bbf393c0021030ae7c5efaba100a</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>APCommonMethods</sys_name>
        <sys_package display_value="AA Management" source="x_1131046_aa_man_0">7630a7f79340021030ae7c5efaba105f</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="AA Management">7630a7f79340021030ae7c5efaba105f</sys_scope>
        <sys_update_name>sys_script_include_00c9bbf393c0021030ae7c5efaba100a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-02-14 13:49:17</sys_updated_on>
    </sys_script_include>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="AA Management">7630a7f79340021030ae7c5efaba105f</application>
        <file_path/>
        <instance_id>3d112a36db4337449df22f17d4961918</instance_id>
        <instance_name>dev90973</instance_name>
        <name>sys_script_include_00c9bbf393c0021030ae7c5efaba100a</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_1131046_aa_man_0.APCommonMethods&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;APCommonMethods&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var APCommonFunctions = Class.create();
APCommonFunctions.prototype = {
    initialize: function() {
        this.defaultPass = "abc@123123";
        this.log = "SI | APCommonFunctions | ";
    },
    type: 'APCommonFunctions',
    adminGroupID: '0730ebf79340021030ae7c5efaba1068',
    IST: 19800000,
    //event1: 'x_snc_accessprov_0.send_mail_to_user',
    //event2: 'x_snc_accessprov_0.inform_admin',
    ApiMethods: new AA_API_Methods(this.defaultPass),
    CmnMethods: new CommonMethods(),
    groupMemberGR: new GlideRecord('sys_user_grmember'),
    userRequestsGR: new GlideRecord('x_1131046_aa_man_0_user_requests'),
    usersGR: new GlideRecord('x_1131046_aa_man_0_users'),
    addEvent: function(event, rec, p1, p2) {
        gs.info(this.log + " addEvent &gt;&gt; " + event);
        gs.eventQueue(name = event, record = rec, parm1 = p1, parm2 = p2);
    },
    getAllPendingReq: function() {
        var logName = this.log + "getAllPendingReq &gt;&gt; ";
        if (!this.isAdmin()) {
            gs.error(logName + " Unknown Access found");
            // Add Mail Notification when someone other than admin tried to access it.
            return;
        } else {
            gs.info(logName + "getting all the pending requests.");
            var reqData = [];
            var i = 0;
            var gd = new GlideDate();
            let table = this.userRequestsGR;
            table.addQuery('status', 'pending');
            table.orderByDesc('sys_created_on');
            table.query();
            while (table.next()) {
                let gdt = new GlideDateTime(table.sys_created_on.toString());
                gdt.add(this.IST);
                gd.setValue(gdt.getValue());
                reqData.push({
                    no: ++i,
                    recordSysID: table.getUniqueValue(),
                    name: table.getValue('first_name').toString(),
                    mailID: table.getValue('email_id').toString(),
                    username: table.getValue('username').toString(),
                    environment: table.getDisplayValue('environment').toString(),
                    requestedOn: gd.getByFormat("dd-MMM-yyyy hh:mm a"),
                });
            }
            return reqData;
        }
    },
    isAdmin: function() {
        return gs.getUser().isMemberOf(this.adminGroupID);
    },
};
]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-02-06 14:17:35&lt;/sys_created_on&gt;&lt;sys_id&gt;00c9bbf393c0021030ae7c5efaba100a&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;APCommonMethods&lt;/sys_name&gt;&lt;sys_package display_value="AA Management" source="x_1131046_aa_man_0"&gt;7630a7f79340021030ae7c5efaba105f&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="AA Management"&gt;7630a7f79340021030ae7c5efaba105f&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_00c9bbf393c0021030ae7c5efaba100a&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-02-14 13:49:17&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-98903879</payload_hash>
        <record_name>APCommonMethods</record_name>
        <reverted_from/>
        <source>84b0d202075402101808fe4f7c1ed0e9</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-02-14 13:49:17</sys_created_on>
        <sys_id>ed50c5a6079482101808fe4f7c1ed074</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>18da7e0ffad0000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-02-14 13:49:17</sys_updated_on>
        <type>Script Include</type>
        <update_guid>295001ee325482106c10ea36854eb4c3</update_guid>
        <update_guid_history>295001ee325482106c10ea36854eb4c3:-98903879,b3bf0e82e754021001ebd4c276279ffd:-989499242</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-02-14 13:55:56</sys_created_on>
        <sys_db_object display_value="" name="sys_script_include">sys_script_include</sys_db_object>
        <sys_id>52ad9f9b519c4cc0b8fa89aaa0938e40</sys_id>
        <sys_metadata>00c9bbf393c0021030ae7c5efaba100a</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>APCommonMethods</sys_name>
        <sys_package display_value="AA Management" source="x_1131046_aa_man_0">7630a7f79340021030ae7c5efaba105f</sys_package>
        <sys_parent/>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="AA Management">7630a7f79340021030ae7c5efaba105f</sys_scope>
        <sys_scope_delete display_value="">2be73dab4eaf4736a09a5739e1636be9</sys_scope_delete>
        <sys_update_name>sys_script_include_00c9bbf393c0021030ae7c5efaba100a</sys_update_name>
        <sys_update_version display_value="sys_script_include_00c9bbf393c0021030ae7c5efaba100a">ed50c5a6079482101808fe4f7c1ed074</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-02-14 13:55:56</sys_updated_on>
    </sys_metadata_delete>
</record_update>
