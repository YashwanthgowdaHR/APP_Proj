<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function(spUtil){
	var c = this;

	function deleteProp(obj, key) {
		if(obj.hasOwnProperty(key)) { 
			delete obj[key];
		}
		return obj;
	}

	function handleUpdateResponse(res) {
		deleteProp(c.data, "action");
		deleteProp(c.data, "firstName");
		deleteProp(c.data, "lastName");
		deleteProp(c.data, "uID");
		deleteProp(c.data, "automationName");
		deleteProp(c.data, "mailID");
		deleteProp(c.data, "environment");
	}

	function handleError(error) {
		console.error('An error occurred:', error);
		deleteProp(c.data, "action");
	}

	c.requestAccess = function(){
		
		c.data.firstName = c.data.userInfo.firstName;
		c.data.lastName = c.data.userInfo.lastName;
		c.data.mailID = c.data.userInfo.mailID;
		c.data.uID = c.data.userInfo.uID;
		c.data.automationName = c.data.tempAutoName.value;
		c.data.environment = c.data.tempEnv;
		c.data.action = 'requestAccess';
		c.server.update().then(handleUpdateResponse).catch(handleError);
	}


	/*
function onChange(control, oldValue, newValue, isLoading) { 
  var elementID = gel('txt_automation_name');
    switch(newValue) { 
      case "1": elementID.style.backgroundColor = "red"; break; 
      case "2": elementID.style.backgroundColor = "tomato"; break;
      case "3": elementID.style.backgroundColor = "orange"; break;
      case "4": elementID.style.backgroundColor = "yellow"; break;
      case "5": elementID.style.backgroundColor = "green"; break; 
      default: elementID.style.backgroundColor = "white"; break;
		} 
}
*/
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>label{
  font-weight: bold;
}

.pre-wrap {
  white-space:pre-wrap;
}

.col-sm-4 {
  padding-left: 0px;
}
	    
@media screen and (max-width: 992px) {
  .col-sm-4 {
    padding-right: 0px;
  }

  .col-sm-8 {
    padding-left: 0px;
  }
}

select{
  text-transform: uppercase;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description>Form to take input</description>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>tsp_usr_req_access</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>User - Request Access</name>
        <option_schema/>
        <public>false</public>
        <roles>x_snc_accessprov_0.user</roles>
        <script><![CDATA[(function(){
	var gr = new GlideRecord('x_snc_accessprov_0_environment');
	var env_name = gr.getElement("name");
	data.env = env_name.getChoices(); // Read the Choices present in the Environment:Name field
	data.snTableName = 'x_snc_accessprov_0_automationlist';
	data.userInfo = new CommonMethods().getUserDataByUID(gs.getUserName());
	
})();



if(input){
	if(input.action=='requestAccess'){
		// validate if any of the required field is undefined
		if(input.firstName == undefined || input.lastName == undefined || input.mailID == undefined || input.automationName == undefined || input.environment == undefined){
			gs.addErrorMessage("Please fill all the necessary fields and submit the form.");
		}
		else{
			var tmpData = {'firstName': input.firstName, 'lastName': input.lastName, 'mailID':input.mailID, 'automationName':input.automationName, 'environment': input.environment, 'uID':input.uID};
			var res = new APCommonFunctions().createReq(tmpData);
			// role field will contain the default value i.e. 224(AAE_Basic)
			if(!res)
				gs.addInfoMessage("Access Requested. Wait for approval");
			else
				gs.addErrorMessage("Request is already made.");
		}

	}

}]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-11-22 06:04:04</sys_created_on>
        <sys_id>ffff629f782231107f4427174a80032a</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>User - Request Access</sys_name>
        <sys_package display_value="AccessProvider" source="x_snc_accessprov_0">45a6ae6e381631107f4403cbe8102e24</sys_package>
        <sys_policy/>
        <sys_scope display_value="AccessProvider">45a6ae6e381631107f4403cbe8102e24</sys_scope>
        <sys_update_name>sp_widget_ffff629f782231107f4427174a80032a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-01-19 11:02:36</sys_updated_on>
        <template><![CDATA[<div>
  <form class="form-horizontal">
    <fieldset>

      <!-- Form Name -->
      <legend class="text-center">
        <h3>Raise Request</h3>
      </legend>

      <!-- MUID/XUID -->
      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_uid">MUID </label>
        <div class="col-md-6">
          <input id="txt_uid" ng-model="data.userInfo.uID" type="text" class="form-control input-md" disabled>
        </div>
      </div>

      <!-- First Name -->
      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_first_name">First Name</label>
        <div class="col-md-6">
          <input id="txt_first_name" ng-model="data.userInfo.firstName" type="text" class="form-control input-md" disabled>
        </div>
      </div>

      <!-- Last Name -->
      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_last_name">Last Name</label>
        <div class="col-md-6">
          <input id="txt_last_name" ng-model="data.userInfo.lastName" type="text" class="form-control input-md" disabled>
        </div>
      </div>

      <!-- Email ID -->
      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_email">Email Id</label>
        <div class="col-md-6">
          <input id="txt_email" ng-model="data.userInfo.mailID" type="email" class="form-control input-md" disabled>
        </div>
      </div>

      <!-- Automation -->
      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_automation">Automation</label>
        <div class="col-md-6">
        <sn-record-picker table="data.snTableName" field="data.tempAutoName" display-field="'name'" value-field="'name'" search-fields="'name'" page-size="10"></sn-record-picker>
      </div>
      </div>

      <!-- Environment -->
      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_env">Environment</label>
        <div class="col-md-6">
          <select id="txt_env" class="form-control input-md" ng-model="data.tempEnv"
            ng-init="data.tempEnv = data.env[0]" ng-options="option for option in data.env">
          </select>
        </div>
      </div>

      <!-- Submit Button -->
      <div class="form-group">
        <div class="col-md-6">
          <button id="btn_submit" name="btn_submit" class="btn btn-primary" ng-click="c.requestAccess()"
            type="submit">Submit</button>
        </div>
      </div>

    </fieldset>
  </form>

</div>]]></template>
    </sp_widget>
</record_update>
