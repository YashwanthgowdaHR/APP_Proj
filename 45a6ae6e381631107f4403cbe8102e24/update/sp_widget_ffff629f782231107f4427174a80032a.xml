<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function(spUtil){
	var c = this;
	//$scope.snTableName = c.data.snTableName;
	
	c.data.referenceFieldValue = 'value2'
    c.data.referenceFieldOptions= [
        { label: 'Option 1', value: 'value1' },
        { label: 'Option 2', value: 'value2' },
        // Add more options as needed
    ];
	
	console.log('Options:', c.data.referenceFieldOptions);
console.log('Selected Value:', c.data.referenceFieldValue);
		
	function handleUpdateResponse(res) {
		c.data.automation_name = "";
		c.data.environment = c.data.env[0];
		delete c.data.action
	}

	function handleError(error) {
		console.error('An error occurred:', error);
		// Handle or log the error as needed
	}
	
	c.requestAccess = function(){
		console.log(c);
		//console.log($scope);
		c.data.fname = data.user_info.fname;
		c.data.lname = data.user_info.lname;
		c.data.email = data.user_info.email;
		c.data.uid = data.user_info.uid;
		c.data.automation_name = data.automation_name;
		c.data.environment = data.environment;
		
		delete data.env;
		delete data.user_info;
		
		c.data.action = 'requestAccess';
		//c.server.update().then(handleUpdateResponse).catch(handleError)};
	
}

function onChange(control, oldValue, newValue, isLoading) { 
  var elementID = gel('txt_automation_name');
    switch(newValue) { 
      case "1": elementID.style.backgroundColor = "red"; break; 
      case "2": elementID.style.backgroundColor = "tomato"; break;
      case "3": elementID.style.backgroundColor = "orange"; break;
      case "4": elementID.style.backgroundColor = "yellow"; break;
      case "5": elementID.style.backgroundColor = "green"; break; 
      default: elementID.style.backgroundColor = "white"; break;
		} 
}
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>label{
  font-weight: bold;
}

.pre-wrap {
  white-space:pre-wrap;
}

.col-sm-4 {
  padding-left: 0px;
}
	    
@media screen and (max-width: 992px) {
  .col-sm-4 {
    padding-right: 0px;
  }

  .col-sm-8 {
    padding-left: 0px;
  }
}

select{
  text-transform: uppercase;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description>Form to take input</description>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>tsp_user_request_access</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>User Request Access</name>
        <option_schema/>
        <public>false</public>
        <roles>x_snc_accessprov_0.user</roles>
        <script><![CDATA[(function(){
	var gr = new GlideRecord('x_snc_accessprov_0_environment');
	var env_name = gr.getElement("name");
	data.env = env_name.getChoices(); // Read the Choices present in the Environment:Name field

	
	gr = new GlideRecord('x_snc_accessprov_0_automationlist');
	gr.query();
	data.snTableName = 'x_snc_accessprov_0_automationlist';
	data.automationFieldOptions = [];
	while(gr.next()){
		var cur = gr.getValue('name').toString();
		data.automationFieldOptions.push({'displayValue': cur.toUpperCase(),'value': cur,'name':cur.toUpperCase()});
	}
	
	// Fetch User Details
	gr = new GlideRecord('sys_user');
	gr.addEncodedQuery('user_name='+gs.getUserName());
	gr.query();
	while(gr.next()){
		data.user_info = {
			fname: gr.first_name.toString(),
			lname: gr.last_name.toString(),
			email: gr.email.toString(),
			uid: gs.getUserName()
		};
	}
})();


if(input){
	if(input.action=='requestAccess'){
		if(input.fname == undefined || input.lname == undefined || input.email == undefined || input.automation_name == undefined || input.environment == undefined){
			gs.addErrorMessage("Please fill all the neccessary fields and submit the form.");
		}
		else{
			var gr = new GlideRecord('x_snc_accessprov_0_aa_request_access');
			gr.addEncodedQuery('x_m_uid='+input.uid+"^automation_name="+input.automation_name+"^environment="+input.environment+"^status=pending^ORstatus=granted");
			gr.query();
			
			if(!gr.next()){					
				gr.initialize(); //create an empty record before inserting.
				gr.setValue('first_name', input.fname);
				gr.setValue('last_name', input.lname);
				gr.setValue('email_id', input.email);
				gr.setValue('automation_name', input.automation_name);
				gr.setValue('environment', input.environment);
				gr.setValue('x_m_uid', input.uid);
				gr.insert();
				gs.addInfoMessage("Access Requested. Wait for approval.")
				
				var apcf = new APCommonFunctions();
				apcf.InformAdminOnRequest({'uid':input.uid,'name': input.fname+" "+input.lname,'environment':input.environment});
			}
			else{
				gs.addErrorMessage("Request is already made.");
			}	
		}
		
	}
	
}]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-11-22 06:04:04</sys_created_on>
        <sys_id>ffff629f782231107f4427174a80032a</sys_id>
        <sys_name>User Request Access</sys_name>
        <sys_package display_value="AccessProvider" source="x_snc_accessprov_0">45a6ae6e381631107f4403cbe8102e24</sys_package>
        <sys_policy/>
        <sys_scope display_value="AccessProvider">45a6ae6e381631107f4403cbe8102e24</sys_scope>
        <sys_update_name>sp_widget_ffff629f782231107f4427174a80032a</sys_update_name>
        <template><![CDATA[<div>
  <form class="form-horizontal">
    <fieldset>

      <!-- Form Name -->
      <legend class="text-center">
        <h3>Access request form</h3>
      </legend>


      <!-- Text input-->
      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_uid">MUID / XUID</label>
        <div class="col-md-6">
          <input id="txt_uid" ng-model="data.user_info.uid" type="text" class="form-control input-md" disabled>
        </div>
      </div>

      <!-- Text input-->
      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_first_name">First Name</label>
        <div class="col-md-6">
          <input id="txt_first_name" ng-model="data.user_info.fname" type="text" class="form-control input-md" disabled>
        </div>
      </div>

      <!-- Text input-->
      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_last_name">Last Name</label>
        <div class="col-md-6">
          <input id="txt_last_name" ng-model="data.user_info.lname" type="text" class="form-control input-md" disabled>
        </div>
      </div>

      <!-- Text input-->
      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_email">Email Id</label>
        <div class="col-md-6">
          <input id="txt_email" ng-model="data.user_info.email" type="email" class="form-control input-md" disabled>
        </div>
      </div>
      
    <div>
    <label for="referenceField">Select a Record:</label>
		<ap-Reference-Getter table="data.snTableName" field="data.new_automation_name" display-field="'name'" value-field="'name'" search-fields="'name'" page-size="10" custom-Style="{'text-transform':'None'}"></ap-Reference-Getter>
</div>





      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_automation_name">Automation</label>
        <div class="col-md-6">
          <input id="txt_automation_name" ng-model="data.automation_name" type="text" class="form-control input-md" required>
        </div>
      </div>

      <div class="form-group">
        <label class="col-md-4 control-label" for="txt_env">Environment</label>
        <div class="col-md-6">
          <select id="txt_env" class="form-control input-md" ng-model="data.environment"
            ng-init="data.environment = data.env[0]" ng-options="option for option in data.env">
          </select>
        </div>
      </div>
     


      <!-- Button -->
      <div class="form-group">
        <div class="col-md-6">
          <button id="btn_submit" name="btn_submit" class="btn btn-primary" ng-click="c.requestAccess()" type="submit">Submit</button>
        </div>
      </div>

    </fieldset>
  </form>

</div>]]></template>
    </sp_widget>
</record_update>
