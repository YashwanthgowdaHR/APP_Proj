<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope,spModal, spUtil) {
	/* widget controller */
	var c = this;
	c.request = function(){
		var option = {
			widget: "request_access_widget_2",
			buttons: [{
				label: "Submit",
				value: "submit",
				class: "btn-primary"
			}]
		}
		spModal.open(option).then(function(response){
			c.server.get({
				action: "get_data"
			}).then (function (serverResponse) {
				console.log(serverResponse.data)
			})
			/*if(btn.value == "submit"){
				c.data.fname = $scope.c.data.user_info.fname;
				c.data.lname = $scope.c.data.user_info.lname;
				c.data.email = $scope.c.data.user_info.email;
				c.data.uid = $scope.c.data.user_info.uid;
				c.data.automation_name =$scope.c.data.automation_name;
				c.data.environment = $scope.c.data.environment;
				
				// delete the data.user_info and data.env variable
				delete c.data.user_info;
				delete c.data.env;
				c.data.action = 'addRecord';
				c.server.update().then(function(){
					c.data.automation_name = "";
					c.data.environment = c.data.env[0];
					spModal.alert("Access Requested")
				})
				
			}*/
			
		})
		
		
		/*
		spModal.open(option).then(function(btn){
			if(btn.value == "submit"){
				console.log(spModal)
				console.log($scope)
				c.data.fname = $scope.c.data.user_info.fname;
				c.data.lname = $scope.c.data.user_info.lname;
				c.data.email = $scope.c.data.user_info.email;
				c.data.uid = $scope.c.data.user_info.uid;
				c.data.automation_name =$scope.c.data.automation_name;
				c.data.environment = $scope.c.data.environment;
				
				// delete the data.user_info and data.env variable
				delete c.data.user_info;
				delete c.data.env;
				c.data.action = 'addRecord';
				c.server.update().then(function(){
					c.data.automation_name = "";
					c.data.environment = c.data.env[0];
					spModal.alert("Access Requested")
				})
				
			}
		})
		spUtil.get("request_access_widget_2").then(function(response) {
  c.coolClock = response;
});*/
		
	}

};]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>test_widget</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>test_widget</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function(){
	
	
})();


if(input){
	
	if(input.action=='get_data'){
		var gr = new GlideRecord('x_snc_accessprov_0_environment');
	var env_name = gr.getElement("name");
	data.env = env_name.getChoices(); // Read the Choices present in the Environment:Name field
	//gs.addInfoMessage(data.userName);
	
	gr = new GlideRecord('sys_user');
	gr.addQuery('sys_id',gs.getUserID());
	gr.query();
	while(gr.next()){
		data.user_info = {
			fname: gr.first_name.toString(),
			lname: gr.last_name.toString(),
			email: gr.email.toString(),
			uid: gr.user_name.toString(),
			name: gr.name.toString()
		};
	}
	}
	
	if(input.action=='addRecord'){
		gs.addInfoMessage("Recevied Request")
		var gr = new GlideRecord('x_snc_accessprov_0_aa_request_access');
		gr.initialize(); //create an empty record before inserting.
		
		gr.setValue('first_name', input.fname);
		gr.setValue('last_name', input.lname);
		gr.setValue('email_id', input.email);
		gr.setValue('automation_name', input.automation_name);
		gr.setValue('environment', input.environment);
		gr.setValue('x_m_uid', input.uid);
		gr.insert();
	}
	
	
}]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-11-23 12:04:23</sys_created_on>
        <sys_id>f35c49fbe16631107f44fa95b6a3cf20</sys_id>
        <sys_name>test_widget</sys_name>
        <sys_package display_value="AccessProvider" source="x_snc_accessprov_0">45a6ae6e381631107f4403cbe8102e24</sys_package>
        <sys_policy/>
        <sys_scope display_value="AccessProvider">45a6ae6e381631107f4403cbe8102e24</sys_scope>
        <sys_update_name>sp_widget_f35c49fbe16631107f44fa95b6a3cf20</sys_update_name>
        <template><![CDATA[<div>
<!-- your widget template -->
  <h3>Hi, Welcome to ServiceNow.</h3>
  <button ng-click="c.request()">Request Access</button>
</div>]]></template>
    </sp_widget>
</record_update>
